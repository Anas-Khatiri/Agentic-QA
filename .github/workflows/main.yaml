name: CI/CD Pipeline

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["main"]

permissions:
  contents: write  # Needed for semantic-release to push commits/tags
  id-token: write  # Optional, for advanced auth with some tools

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/agentic-qa-system-project

jobs:
  lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pre-commit ruff

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  release:
    name: Semantic Versioning & Tagging
    runs-on: ubuntu-latest
    needs: lint
    if: github.ref == 'refs/heads/main'  # Only run on main branch
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for semantic-release to access tags

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install semantic-release
        run: pip install python-semantic-release

      - name: Run semantic release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release version

  docker-build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all tags
        run: git fetch --tags
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}
      
      - name: Get latest version tag
        id: version
        run: echo "VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.VERSION }} .

      - name: Push Docker Image
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
